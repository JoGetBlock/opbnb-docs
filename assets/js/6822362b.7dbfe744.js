"use strict";(self.webpackChunkopbnb_docs=self.webpackChunkopbnb_docs||[]).push([[6985],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>b});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),s=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return o.createElement(l.Provider,{value:n},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(t),u=a,b=d["".concat(l,".").concat(u)]||d[u]||h[u]||r;return t?o.createElement(b,i(i({ref:n},c),{},{components:t})):o.createElement(b,i({ref:n},c))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[d]="string"==typeof e?e:a,i[1]=p;for(var s=2;s<r;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},23011:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var o=t(87462),a=(t(67294),t(3905));const r={sidebar_label:"Run Local Mainnet or Testnet Node",description:"Guide to running opBNB Testnet or Mainnet Node"},i="Running a Local Testnet or Mainnet Node",p={unversionedId:"tutorials/running-a-local-node",id:"tutorials/running-a-local-node",title:"Running a Local Testnet or Mainnet Node",description:"Guide to running opBNB Testnet or Mainnet Node",source:"@site/docs/tutorials/running-a-local-node.md",sourceDirName:"tutorials",slug:"/tutorials/running-a-local-node",permalink:"/opbnb-docs/docs/tutorials/running-a-local-node",draft:!1,editUrl:"https://github.com/bnb-chain/opbnb-docs/blob/main/docs/tutorials/running-a-local-node.md",tags:[],version:"current",frontMatter:{sidebar_label:"Run Local Mainnet or Testnet Node",description:"Guide to running opBNB Testnet or Mainnet Node"},sidebar:"tutorials",previous:{title:"Run Local Dev Enviroment",permalink:"/opbnb-docs/docs/tutorials/running-a-local-development-environment"},next:{title:"Create a Full Stack dapp",permalink:"/opbnb-docs/docs/tutorials/full-stack-dapp"}},l={},s=[{value:"Hardware requirements",id:"hardware-requirements",level:2},{value:"Run with Docker",id:"run-with-docker",level:2},{value:"Run with Binaries",id:"run-with-binaries",level:2},{value:"Build op-node and op-geth",id:"build-op-node-and-op-geth",level:3},{value:"Data Preparation",id:"data-preparation",level:3},{value:"Start components",id:"start-components",level:3},{value:"Run with Snapshots",id:"run-with-snapshots",level:2},{value:"Check status",id:"check-status",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Not synced for a long time",id:"not-synced-for-a-long-time",level:3}],c={toc:s};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"running-a-local-testnet-or-mainnet-node"},"Running a Local Testnet or Mainnet Node"),(0,a.kt)("p",null,"If you're looking to build an app on opBNB you'll need access to an opBNB node.\nYou can simply use the public rpc(Testnet: ",(0,a.kt)("a",{parentName:"p",href:"https://opbnb-testnet-rpc.bnbchain.org"},"https://opbnb-testnet-rpc.bnbchain.org"),", Mainnet: ",(0,a.kt)("a",{parentName:"p",href:"https://opbnb-mainnet-rpc.bnbchain.org"},"https://opbnb-mainnet-rpc.bnbchain.org"),") or run your own node."),(0,a.kt)("p",null,"This guide will walk you through setting up your own Testnet/Mainnet node."),(0,a.kt)("h2",{id:"hardware-requirements"},"Hardware requirements"),(0,a.kt)("p",null,"Replicas must store the transaction history of opBNB and run Geth. For optimal performance, they should be powerful machines (real or virtual) with at least 16 GB RAM and an SSD drive with 500 GB free space (for production network)."),(0,a.kt)("h2",{id:"run-with-docker"},"Run with Docker"),(0,a.kt)("p",null,"There are official Docker images available for the opBNB node. You can use the latest versions of these images from the following links:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/opbnb/pkgs/container/op-node"},"op-node")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/op-geth/pkgs/container/op-geth"},"op-geth"))),(0,a.kt)("p",null,"Additionally, you can find a docker-compose file example in this ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/opbnb-node-docker"},"repository")," to run the opBNB node with Docker. This allows you to set up a Testnet/Mainnet node quickly, within minutes.\nIf you use different infrastructure providers, please consult the docker-compose file and adjust the configuration as needed."),(0,a.kt)("h2",{id:"run-with-binaries"},"Run with Binaries"),(0,a.kt)("h3",{id:"build-op-node-and-op-geth"},"Build op-node and op-geth"),(0,a.kt)("p",null,"dependencies"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"golang 1.20+"),(0,a.kt)("li",{parentName:"ul"},"make"),(0,a.kt)("li",{parentName:"ul"},"git"),(0,a.kt)("li",{parentName:"ul"},"gcc"),(0,a.kt)("li",{parentName:"ul"},"libc-dev")),(0,a.kt)("p",null,"You can refer to the Docker files for Alpine Linux: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/opbnb/blob/develop/op-node/Dockerfile"},"op-node")," and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/op-geth/blob/develop/Dockerfile"},"op-geth"),".\nIf you are using a different OS, please find the alternative packages for your OS."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"export OPBNB_WORKSPACE=/tmp/opbnb\nmkdir -p $OPBNB_WORKSPACE\n\ncd $OPBNB_WORKSPACE\ngit clone https://github.com/bnb-chain/opbnb.git\ncd opbnb/op-node\ngit checkout develop\nmake op-node\nmkdir -p $OPBNB_WORKSPACE/op-node-data\ncp ./bin/op-node $OPBNB_WORKSPACE/op-node-data\n\ncd $OPBNB_WORKSPACE\ngit clone https://github.com/bnb-chain/op-geth.git\ncd op-geth\ngit checkout develop\nmake geth\nmkdir -p $OPBNB_WORKSPACE/op-geth-data\ncp ./build/bin/geth $OPBNB_WORKSPACE/op-geth-data/op-geth\n")),(0,a.kt)("h3",{id:"data-preparation"},"Data Preparation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd $OPBNB_WORKSPACE\n# for testnet\ncp $OPBNB_WORKSPACE/opbnb/assets/testnet/genesis.json $OPBNB_WORKSPACE/op-geth-data\n# for mainnet\n# cp $OPBNB_WORKSPACE/opbnb/assets/mainnet/genesis.json $OPBNB_WORKSPACE/op-geth-data\n\nopenssl rand -hex 32 > jwt.txt\ncp jwt.txt $OPBNB_WORKSPACE/op-geth-data\ncp jwt.txt $OPBNB_WORKSPACE/op-node-data\n\n# init op-geth genesis\ncd $OPBNB_WORKSPACE/op-geth-data\nmkdir datadir\n./op-geth --datadir ./datadir init genesis.json\n")),(0,a.kt)("h3",{id:"start-components"},"Start components"),(0,a.kt)("p",null,"op-geth"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'#! /usr/bin/bash\ncd $OPBNB_WORKSPACE/op-geth-data\n\n# for testnet\nexport CHAIN_ID=5611\nexport L2_RPC=https://opbnb-testnet-rpc.bnbchain.org\nexport P2P_BOOTNODES="enr:-KO4QKFOBDW--pF4pFwv3Al_jiLOITj_Y5mr1Ajyy2yxHpFtNcBfkZEkvWUxAKXQjWALZEFxYHooU88JClyzA00e8YeGAYtBOOZig2V0aMfGhE0ZYGqAgmlkgnY0gmlwhDREiqaJc2VjcDI1NmsxoQM8pC_6wwTr5N2Q-yXQ1KGKsgz9i9EPLk8Ata65pUyYG4RzbmFwwIN0Y3CCdl-DdWRwgnZf,enr:-KO4QFJc0KR09ye818GT2kyN9y6BAGjhz77sYimxn85jJf2hOrNqg4X0b0EsS-_ssdkzVpavqh6oMX7W5Y81xMRuEayGAYtBSiK9g2V0aMfGhE0ZYGqAgmlkgnY0gmlwhANzx96Jc2VjcDI1NmsxoQPwA1XHfWGd4umIt7j3Fc7hKq_35izIWT_9yiN_tX8lR4RzbmFwwIN0Y3CCdl-DdWRwgnZf"\n\n# for mainnet\n# export CHAIN_ID=204\n# export L2_RPC=https://opbnb-mainnet-rpc.bnbchain.org\n# export P2P_BOOTNODES="enr:-KO4QHs5qh_kPFcjMgqkuN9dbxXT4C5Cjad4SAheaUxveCbJQ3XdeMMDHeHilHyqisyYQAByfdhzyKAdUp2SvyzWeBqGAYvRDf80g2V0aMfGhHFtSjqAgmlkgnY0gmlwhDaykUmJc2VjcDI1NmsxoQJUevTL3hJwj21IT2GC6VaNqVQEsJFPtNtO-ld5QTNCfIRzbmFwwIN0Y3CCdl-DdWRwgnZf,enr:-KO4QKIByq-YMjs6IL2YCNZEmlo3dKWNOy4B6sdqE3gjOrXeKdNbwZZGK_JzT1epqCFs3mujjg2vO1lrZLzLy4Rl7PyGAYvRA8bEg2V0aMfGhHFtSjqAgmlkgnY0gmlwhDbjSM6Jc2VjcDI1NmsxoQNQhJ5pqCPnTbK92gEc2F98y-u1OgZVAI1Msx-UiHezY4RzbmFwwIN0Y3CCdl-DdWRwgnZf"\n\n\n./op-geth \\\n  --datadir="./datadir" \\\n  --verbosity=3 \\\n  --http \\\n  --http.corsdomain="*" \\\n  --http.vhosts="*" \\\n  --http.addr=0.0.0.0 \\\n  --http.port=8545 \\\n  --http.api=net,eth,engine \\\n  --ws \\\n  --ws.addr=0.0.0.0 \\\n  --ws.port=8545 \\\n  --ws.origins="*" \\\n  --ws.api=eth,engine \\\n  --syncmode=full \\\n  --maxpeers=10 \\\n  --networkid=$CHAIN_ID \\\n  --miner.gaslimit=150000000 \\\n  --triesInMemory=32 \\\n  --txpool.globalslots=10000 \\\n  --txpool.globalqueue=5000 \\\n  --txpool.accountqueue=200 \\\n  --txpool.accountslots=200 \\\n  --cache 32000 \\\n  --cache.preimages \\\n  --allow-insecure-unlock \\\n  --authrpc.addr="0.0.0.0" \\\n  --authrpc.port="8551" \\\n  --authrpc.vhosts="*" \\\n  --authrpc.jwtsecret=./jwt.txt \\\n  --gcmode=archive \\\n  --metrics \\\n  --metrics.port 6060 \\\n  --metrics.addr 0.0.0.0 \\\n  --rollup.sequencerhttp=$L2_RPC \\\n  --bootnodes=$P2P_BOOTNODES\n')),(0,a.kt)("p",null,"op-node"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'#! /usr/bin/bash\n\nset -ex\n\ncd op-node-data\n\nexport L2_RPC=http://localhost:8551\n# replace the p2p private key with yours\n# you can generate a new one with `openssl rand -hex 32`\nexport P2P_PRIV_KEY=ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n\n# for testnet\n# it\'s better to replace the L1_RPC with your own BSC Testnet RPC Endpoint for stability\nexport L1_RPC=https://bsc-testnet.bnbchain.org\nexport P2P_BOOTNODES="enr:-J24QGQBeMsXOaCCaLWtNFSfb2Gv50DjGOKToH2HUTAIn9yXImowlRoMDNuPNhSBZNQGCCE8eAl5O3dsONuuQp5Qix2GAYjB7KHSgmlkgnY0gmlwhDREiqaHb3BzdGFja4PrKwCJc2VjcDI1NmsxoQL4I9wpEVDcUb8bLWu6V8iPoN5w8E8q-GrS5WUCygYUQ4N0Y3CCIyuDdWRwgiMr,enr:-J24QJKXHEkIhy0tmIk2EscMZ2aRrivNsZf_YhgIU51g4ZKHWY0BxW6VedRJ1jxmneW9v7JjldPOPpLkaNSo6cXGFxqGAYpK96oCgmlkgnY0gmlwhANzx96Hb3BzdGFja4PrKwCJc2VjcDI1NmsxoQMOCzUFffz04eyDrmkbaSCrMEvLvn5O4RZaZ5k1GV4wa4N0Y3CCIyuDdWRwgiMr"\n\n# for mainnet\n# export L1_RPC=https://bsc-dataseed.bnbchain.org\n# export P2P_BOOTNODES="enr:-J24QA9sgVxbZ0KoJ7-1gx_szfc7Oexzz7xL2iHS7VMHGj2QQaLc_IQZmFthywENgJWXbApj7tw7BiouKDOZD4noWEWGAYppffmvgmlkgnY0gmlwhDbjSM6Hb3BzdGFja4PMAQCJc2VjcDI1NmsxoQKetGQX7sXd4u8hZr6uayTZgHRDvGm36YaryqZkgnidS4N0Y3CCIyuDdWRwgiMs"\n\n./op-node \\\n  --l1.trustrpc \\\n  --sequencer.l1-confs=15 \\\n  --verifier.l1-confs=15 \\\n  --l1.http-poll-interval 3s \\\n  --l1.epoch-poll-interval 45s \\\n  --l1.rpc-max-batch-size 20 \\\n  --rollup.config=./rollup.json \\\n  --rpc.addr=0.0.0.0 \\\n  --rpc.port=8546 \\\n  --p2p.sync.req-resp \\\n  --p2p.listen.ip=0.0.0.0 \\\n  --p2p.listen.tcp=9003 \\\n  --p2p.listen.udp=9003 \\\n  --snapshotlog.file=./snapshot.log \\\n  --p2p.bootnodes=$P2P_BOOTNODES \\\n  --metrics.enabled \\\n  --metrics.addr=0.0.0.0 \\\n  --metrics.port=7300 \\\n  --pprof.enabled \\\n  --rpc.enable-admin \\\n  --l1=${L1_RPC} \\\n  --l2=${L2_RPC} \\\n  --l2.jwt-secret=./jwt.txt \\\n  --l2.engine-sync=true \\\n  --l2.skip-sync-start-check=true \\  \n  --log.level=debug\n')),(0,a.kt)("h2",{id:"run-with-snapshots"},"Run with Snapshots"),(0,a.kt)("p",null,"To improve the synchronization speed of the node, you can utilize snapshots to initialize it. "),(0,a.kt)("p",null,"The most recent snapshot is maintained in the repository ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/opbnb-snapshot"},"opbnb-snapshot"),".\nPlease visit the repository for download links and usage instructions."),(0,a.kt)("h2",{id:"check-status"},"Check status"),(0,a.kt)("p",null,"Wait for the node to sync. You'll see log in ",(0,a.kt)("inlineCode",{parentName:"p"},"op-geth")," if there's any new block."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"INFO [11-15|10:10:05.569] Syncing beacon headers                   downloaded=1,762,304 left=11,403,991 eta=27m1.039s\nINFO [11-15|10:10:06.440] Forkchoice requested sync to new head    number=13,164,499 hash=d78cb3..a2e94d finalized=unknown\n")),(0,a.kt)("p",null,"You can check the block number with curl:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'$ curl -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}\' http://localhost:8545\n')),(0,a.kt)("p",null,"Once all headers have been downloaded, the node will begin downloading the blocks.\nYou will notice that the block height is increasing."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{"jsonrpc":"2.0","id":1,"result":"0x1a"}\n')),(0,a.kt)("p",null,"To verify if the node has synchronized to the latest height, you can compare the block with the one requested from public endpoints."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# local\n$ curl -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"eth_getBlockByNumber","id": 1, "params": ["0x1a", false]}\' http://localhost:8545\n\n# testnet\n$ curl -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"eth_getBlockByNumber","id": 1, "params": ["0x1a", false]}\' https://opbnb-testnet-rpc.bnbchain.org\n\n# mainnet\n$ curl -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"eth_getBlockByNumber","id": 1, "params": ["0x1a", false]}\' https://opbnb-mainnet-rpc.bnbchain.org\n')),(0,a.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,a.kt)("p",null,"If the problem you are facing is not addressed here, please open an issue on GitHub by visiting this link: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/opbnb/issues"},"open an issue"),"."),(0,a.kt)("h3",{id:"not-synced-for-a-long-time"},"Not synced for a long time"),(0,a.kt)("p",null,"The default sync mechanism involves two P2P networks, the op-node network and op-geth network.\nIf you are not connected to the op-node network, you can not receive the latest blocks from broadcast, and can't trigger the engine sync of op-geth.\nIf you are not connected to the op-geth network, you can receive the latest blocks from broadcast, but can't get the historical blocks from op-geth P2P network."),(0,a.kt)("p",null,"Check the op-geth logs."),(0,a.kt)("p",null,"If you can find the following logs, it means that the op-node network is connected successfully and you are receiving the latest blocks from broadcast."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"INFO [11-15|10:32:02.801] Forkchoice requested sync to new head    number=8,290,596 hash=1dbff3..9a306a finalized=unknown\n")),(0,a.kt)("p",null,"If you can find the following logs, it means that the op-geth network is connected successfully and you are receiving the historical block headers from op-geth P2P network."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"INFO [11-15|10:32:52.240] Syncing beacon headers                   downloaded=210,432 left=8,084,773 eta=31m39.748s\n")),(0,a.kt)("p",null,"Check the op-node p2p network with the command below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'$ curl -X POST -H "Content-Type: application/json" --data \\\n    \'{"method":"opp2p_peers","params":[true],"id":1,"jsonrpc":"2.0"}\'  \\\n    http://localhost:8546\n')),(0,a.kt)("p",null,"Check the op-geth p2p network with the command below. You have to enable admin API in op-geth to use this API.\nRefer to ",(0,a.kt)("a",{parentName:"p",href:"https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-admin"},"https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-admin")," for more details."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'$ curl -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"admin_peers","params":[],"id":1}\' http://localhost:8545 | jq .\n')))}d.isMDXComponent=!0}}]);