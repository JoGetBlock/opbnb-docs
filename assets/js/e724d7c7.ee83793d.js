"use strict";(self.webpackChunkopbnb_docs=self.webpackChunkopbnb_docs||[]).push([[1905],{3905:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>b});var o=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,o,a=function(n,e){if(null==n)return{};var t,o,a={},r=Object.keys(n);for(o=0;o<r.length;o++)t=r[o],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(o=0;o<r.length;o++)t=r[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var l=o.createContext({}),s=function(n){var e=o.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):p(p({},e),n)),t},c=function(n){var e=s(n.components);return o.createElement(l.Provider,{value:e},n.children)},d="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},h=o.forwardRef((function(n,e){var t=n.components,a=n.mdxType,r=n.originalType,l=n.parentName,c=i(n,["components","mdxType","originalType","parentName"]),d=s(t),h=a,b=d["".concat(l,".").concat(h)]||d[h]||u[h]||r;return t?o.createElement(b,p(p({ref:e},c),{},{components:t})):o.createElement(b,p({ref:e},c))}));function b(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var r=t.length,p=new Array(r);p[0]=h;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=n,i[d]="string"==typeof n?n:a,p[1]=i;for(var s=2;s<r;s++)p[s]=t[s];return o.createElement.apply(null,p)}return o.createElement.apply(null,t)}h.displayName="MDXCreateElement"},51728:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>p,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var o=t(87462),a=(t(67294),t(3905));const r={sidebar_label:"Run Mainnet Node",description:"Guide to running opBNB Mainnet Node"},p="Running a Mainnet node",i={unversionedId:"tutorials/running-a-mainnet-node",id:"tutorials/running-a-mainnet-node",title:"Running a Mainnet node",description:"Guide to running opBNB Mainnet Node",source:"@site/docs/tutorials/running-a-mainnet-node.md",sourceDirName:"tutorials",slug:"/tutorials/running-a-mainnet-node",permalink:"/opbnb-docs/docs/tutorials/running-a-mainnet-node",draft:!1,editUrl:"https://github.com/bnb-chain/opbnb-docs/blob/main/docs/tutorials/running-a-mainnet-node.md",tags:[],version:"current",frontMatter:{sidebar_label:"Run Mainnet Node",description:"Guide to running opBNB Mainnet Node"},sidebar:"tutorials",previous:{title:"Run Test Node",permalink:"/opbnb-docs/docs/tutorials/running-a-testnet-node"},next:{title:"Run Local Dev Enviroment",permalink:"/opbnb-docs/docs/tutorials/running-a-local-development-environment"}},l={},s=[{value:"Hardware requirements",id:"hardware-requirements",level:2},{value:"Build op-node and op-geth",id:"build-op-node-and-op-geth",level:2},{value:"Data Preparation",id:"data-preparation",level:2},{value:"Start components",id:"start-components",level:2},{value:"Check status",id:"check-status",level:2}],c={toc:s};function d(n){let{components:e,...t}=n;return(0,a.kt)("wrapper",(0,o.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"running-a-mainnet-node"},"Running a Mainnet node"),(0,a.kt)("p",null,"If you're looking to build an app on opBNB you'll need access to an opBNB node.\nYou can simply use the public mainnet node at ",(0,a.kt)("a",{parentName:"p",href:"https://opbnb-mainnet-rpc.bnbchain.org"},"https://opbnb-mainnet-rpc.bnbchain.org")," or run your own."),(0,a.kt)("p",null,"This guide will walk you through setting up your own Mainnet node."),(0,a.kt)("h2",{id:"hardware-requirements"},"Hardware requirements"),(0,a.kt)("p",null,"Replicas must store the transaction history of opBNB and run Geth. For optimal performance, they should be powerful machines (real or virtual) with at least 16 GB RAM and an SSD drive with 500 GB free space (for production network)."),(0,a.kt)("h2",{id:"build-op-node-and-op-geth"},"Build op-node and op-geth"),(0,a.kt)("p",null,"The current version of opBNB Mainnet is ",(0,a.kt)("inlineCode",{parentName:"p"},"v0.1.2"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"export OPBNB_MAINNET_VERSION=v0.1.2\nexport OPBNB_WORKSPACE=/tmp/opbnb\nmkdir -p $OPBNB_WORKSPACE\n\ncd $OPBNB_WORKSPACE\ngit clone git@github.com:bnb-chain/opbnb.git\ncd opbnb/op-node\ngit checkout $OPBNB_MAINNET_VERSION\nmake op-node\nmkdir -p $OPBNB_WORKSPACE/op-node-data\ncp ./bin/op-node $OPBNB_WORKSPACE/op-node-data\n\ncd $OPBNB_WORKSPACE\ngit clone git@github.com:bnb-chain/op-geth.git\ncd op-geth\ngit checkout $OPBNB_MAINNET_VERSION\nmake geth\nmkdir -p $OPBNB_WORKSPACE/op-geth-data\ncp ./build/bin/geth $OPBNB_WORKSPACE/op-geth-data/op-geth\n")),(0,a.kt)("h2",{id:"data-preparation"},"Data Preparation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd $OPBNB_WORKSPACE\nwget -P op-geth-data https://raw.githubusercontent.com/bnb-chain/opbnb/develop/assets/mainnet/genesis.json\nwget -P op-node-data https://raw.githubusercontent.com/bnb-chain/opbnb/develop/assets/mainnet/rollup.json\n\nopenssl rand -hex 32 > jwt.txt\ncp jwt.txt $OPBNB_WORKSPACE/op-geth-data\ncp jwt.txt $OPBNB_WORKSPACE/op-node-data\n\n# init op-geth genesis\ncd $OPBNB_WORKSPACE/op-geth-data\nmkdir datadir\n./op-geth --datadir ./datadir init genesis.json\n")),(0,a.kt)("h2",{id:"start-components"},"Start components"),(0,a.kt)("p",null,"op-geth"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'#! /usr/bin/bash\ncd $OPBNB_WORKSPACE/op-geth-data\n\nexport CHAIN_ID=204\nexport L2_RPC=https://opbnb-mainnet-rpc.bnbchain.org\n\n./op-geth \\\n  --datadir="./datadir" \\\n  --verbosity=3 \\\n  --http \\\n  --http.corsdomain="*" \\\n  --http.vhosts="*" \\\n  --http.addr=0.0.0.0 \\\n  --http.port=8545 \\\n  --http.api=net,eth,engine \\\n  --ws \\\n  --ws.addr=0.0.0.0 \\\n  --ws.port=8545 \\\n  --ws.origins="*" \\\n  --ws.api=eth,engine \\\n  --syncmode=full \\\n  --maxpeers=10 \\\n  --networkid=$CHAIN_ID \\\n  --miner.gaslimit=150000000 \\\n  --triesInMemory=32 \\\n  --txpool.globalslots=10000 \\\n  --txpool.globalqueue=5000 \\\n  --txpool.accountqueue=200 \\\n  --txpool.accountslots=200 \\\n  --cache 32000 \\\n  --cache.preimages \\\n  --allow-insecure-unlock \\\n  --authrpc.addr="0.0.0.0" \\\n  --authrpc.port="8551" \\\n  --authrpc.vhosts="*" \\\n  --authrpc.jwtsecret=./jwt.txt \\\n  --gcmode=archive \\\n  --metrics \\\n  --metrics.port 6060 \\\n  --metrics.addr 0.0.0.0 \\\n  --rollup.sequencerhttp=$L2_RPC\n')),(0,a.kt)("p",null,"op-node"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'#! /usr/bin/bash\n\nset -ex\n\ncd op-node-data\n\nexport L2_RPC=http://localhost:8551\n# it\'s better to replace the L1_RPC with your own BSC Mainnet RPC Endpoint for stability\nexport L1_RPC=https://bsc-dataseed.bnbchain.org\n# replace the p2p private key with yours\n# you can generate a new one with `openssl rand -hex 32`\nexport P2P_PRIV_KEY=0000000000000000000000000000000000000000000000000000000000000000\nexport P2P_BOOTNODES="enr:-J24QGRN1ZLv--bzrqM-qRC-zUlCO4irVVg2bbWOvd3KEFjwLj8qCh54a1ziqic84uQz-2RLVSuNyNAbKEfrNr-STj-GAYoIQDCIgmlkgnY0gmlwhDaykUmHb3BzdGFja4PMAQCJc2VjcDI1NmsxoQJ-_5GZKjs7jaB4TILdgC8EwnwyL3Qip89wmjnyjvDDwoN0Y3CCIyuDdWRwgiMr"\n\n./op-node \\\n  --l1.trustrpc \\\n  --sequencer.l1-confs=15 \\\n  --verifier.l1-confs=15 \\\n  --l1.http-poll-interval 3s \\\n  --l1.epoch-poll-interval 45s \\\n  --l1.rpc-max-batch-size 20 \\\n  --rollup.config=./rollup.json \\\n  --rpc.addr=0.0.0.0 \\\n  --rpc.port=8546 \\\n  --p2p.sync.req-resp \\\n  --p2p.listen.ip=0.0.0.0 \\\n  --p2p.listen.tcp=9003 \\\n  --p2p.listen.udp=9003 \\\n  --snapshotlog.file=./snapshot.log \\\n  --p2p.priv.raw=$P2P_PRIV_KEY \\\n  --p2p.bootnodes=$P2P_BOOTNODES \\\n  --metrics.enabled \\\n  --metrics.addr=0.0.0.0 \\\n  --metrics.port=7300 \\\n  --pprof.enabled \\\n  --rpc.enable-admin \\\n  --l1=${L1_RPC} \\\n  --l2=${L2_RPC} \\\n  --l2.jwt-secret=./jwt.txt \\\n  --log.level=debug\n')),(0,a.kt)("h2",{id:"check-status"},"Check status"),(0,a.kt)("p",null,"Wait for the node to sync. You'll see log in ",(0,a.kt)("inlineCode",{parentName:"p"},"op-geth")," if there's any new block."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'INFO [06-14|01:15:02.937] Starting work on payload                 id=0x4e2b62d76dc5f1d3\nINFO [06-14|01:15:02.937] Imported new potential chain segment     number=5580 hash=895199..a87b81 blocks=1 txs=1 mgas=0.047 elapsed="241.25\xb5s"  mgasps=194.508  age=1d9h23m  dirty=0.00B\nINFO [06-14|01:15:02.938] Chain head was updated                   number=5580 hash=895199..a87b81 root=79aad7..99e3bb elapsed="27.333\xb5s"  age=1d9h23m\n')),(0,a.kt)("p",null,"You can also check the block number with curl:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'$ curl -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}\' http://localhost:8545\n')),(0,a.kt)("p",null,"If the node is synced, you'll see the non-zero block number in the response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{"jsonrpc":"2.0","id":1,"result":"0x1a"}\n')),(0,a.kt)("p",null,"You can compare the block with the one requested from ",(0,a.kt)("a",{parentName:"p",href:"https://opbnb-mainnet-rpc.bnbchain.org"},"public mainnet endpoint"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'$ curl -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"eth_getBlockByNumber","id": 1, "params": ["0x1a", false]}\' http://localhost:8545\n$ curl -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"eth_getBlockByNumber","id": 1, "params": ["0x1a", false]}\' https://opbnb-mainnet-rpc.bnbchain.org\n')))}d.isMDXComponent=!0}}]);